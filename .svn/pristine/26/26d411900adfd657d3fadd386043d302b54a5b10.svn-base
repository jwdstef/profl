<?xml version="1.0" encoding="UTF-8"?>
	<!-- 配置數據連接、事物等通用初始化操作xml： -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
       http://www.springframework.org/schema/beans/spring-beans.xsd  
       http://www.springframework.org/schema/tx   
       http://www.springframework.org/schema/tx/spring-tx.xsd  
       http://www.springframework.org/schema/context   
       http://www.springframework.org/schema/context/spring-context.xsd  
       http://www.springframework.org/schema/aop  
       http://www.springframework.org/schema/aop/spring-aop.xsd"><!--扫描实际业务操作源码包路径 -->
	<context:component-scan base-package="com.radixdigit.controller.*" />
	<context:component-scan base-package="com.radixdigit.dao.*" />
	<context:component-scan base-package="com.radixdigit.service.*" />
	<!-- 配置数据源 -->
	<bean id="ssmDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<!--
			最大连接数据库连接数
		-->
		<property name="maxActive" value="${maxActive}" />
		<!--
			最大等待连接中的数量 0标识没有限制
		-->
		<property name="maxIdle" value="${maxIdle}" />
		<!--
			最大等待毫秒数 超时报错
		-->
		<property name="maxWait" value="${maxWait}" />

		<property name="defaultAutoCommit" value="true" />
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
		<!--是否在自动回收超时连接的时候打印连接的超时错误-->
		<property name="logAbandoned" value="${logAbandoned}" />
	</bean>

	<!-- Mybatis 数据Session工厂配置 -->
	<bean id="ssmSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource">
			<ref bean="ssmDataSource" />
		</property>
		<!-- 加载MyBatis 的 XML 配置文件-->
		<property name="configLocation"
			value="classpath:com/radixdigit/config/SqlMapConfig.xml" />
		<!-- 扫描映射的resultmap.xml文件 ，可以再SqlMapConfig里边配置 -->
		<property name="mapperLocations">
			<list>
				<!-- Result.XML結果映射文件 -->
				<value>classpath*:com/radixdigit/config/resultMap/*Mapper.xml
				</value>
				<value>classpath*:com/radixdigit/config/resultMap/*/*Mapper.xml
				</value>
			</list>
		</property>
	</bean>
	<bean id="ssmSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="ssmSessionFactory"></constructor-arg>
	</bean>

	<!--加载接口映射文件IntefaceMapper.XML文件-->
	<import resource="classpath:com/radixdigit/config/IntefaceMapper/*.xml" />
	<!-- 数据库事务策略-->
	<bean id="ssmTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref bean="ssmDataSource" />
		</property>
	</bean>
	<!--通知-->
	<tx:advice id="ssmTxAdvice" transaction-manager="ssmTransactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception"/>
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception" />
	</tx:advice>
	<!-- 切面 -->
	<aop:config proxy-target-class="true">
		<aop:advisor pointcut="execution( * com.radixdigit.services.*.*(..))"
			advice-ref="ssmTxAdvice" />
	</aop:config>
</beans>