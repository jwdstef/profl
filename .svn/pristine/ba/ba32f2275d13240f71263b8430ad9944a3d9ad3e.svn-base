<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.UsersMapper">
  <resultMap id="BaseResultMap" type="entity.Users">
    <id column="U_ID" jdbcType="INTEGER" property="uId" />
    <result column="T_ID" jdbcType="INTEGER" property="tId" />
    <result column="U_NAME" jdbcType="VARCHAR" property="uName" />
    <result column="U_PASSWORD" jdbcType="VARCHAR" property="uPassword" />
    <result column="AGE" jdbcType="INTEGER" property="age" />
    <result column="SEX" jdbcType="CHAR" property="sex" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    U_ID, T_ID, U_NAME, U_PASSWORD, AGE, SEX, PHONE
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where U_ID = #{uId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where U_ID = #{uId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="entity.Users">
    insert into users (U_ID, T_ID, U_NAME, 
      U_PASSWORD, AGE, SEX, PHONE
      )
    values (#{uId,jdbcType=INTEGER}, #{tId,jdbcType=INTEGER}, #{uName,jdbcType=VARCHAR}, 
      #{uPassword,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{sex,jdbcType=CHAR}, #{phone,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="entity.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uId != null">
        U_ID,
      </if>
      <if test="tId != null">
        T_ID,
      </if>
      <if test="uName != null">
        U_NAME,
      </if>
      <if test="uPassword != null">
        U_PASSWORD,
      </if>
      <if test="age != null">
        AGE,
      </if>
      <if test="sex != null">
        SEX,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uId != null">
        #{uId,jdbcType=INTEGER},
      </if>
      <if test="tId != null">
        #{tId,jdbcType=INTEGER},
      </if>
      <if test="uName != null">
        #{uName,jdbcType=VARCHAR},
      </if>
      <if test="uPassword != null">
        #{uPassword,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.UsersExample" resultType="java.lang.Integer">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="entity.Users">
    update users
    <set>
      <if test="tId != null">
        T_ID = #{tId,jdbcType=INTEGER},
      </if>
      <if test="uName != null">
        U_NAME = #{uName,jdbcType=VARCHAR},
      </if>
      <if test="uPassword != null">
        U_PASSWORD = #{uPassword,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        AGE = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        SEX = #{sex,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
    </set>
    where U_ID = #{uId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.Users">
    update users
    set T_ID = #{tId,jdbcType=INTEGER},
      U_NAME = #{uName,jdbcType=VARCHAR},
      U_PASSWORD = #{uPassword,jdbcType=VARCHAR},
      AGE = #{age,jdbcType=INTEGER},
      SEX = #{sex,jdbcType=CHAR},
      PHONE = #{phone,jdbcType=VARCHAR}
    where U_ID = #{uId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="entity.Users">
    <id column="U_ID" jdbcType="INTEGER" property="uId" />
    <result column="T_ID" jdbcType="INTEGER" property="tId" />
    <result column="U_NAME" jdbcType="VARCHAR" property="uName" />
    <result column="U_PASSWORD" jdbcType="VARCHAR" property="uPassword" />
    <result column="AGE" jdbcType="INTEGER" property="age" />
    <result column="SEX" jdbcType="CHAR" property="sex" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
  </resultMap>
  <sql id="Base_Column_List">
    U_ID, T_ID, U_NAME, U_PASSWORD, AGE, SEX, PHONE
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where U_ID = #{uId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where U_ID = #{uId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="entity.Users">
    insert into users (U_ID, T_ID, U_NAME, 
      U_PASSWORD, AGE, SEX, PHONE
      )
    values (#{uId,jdbcType=INTEGER}, #{tId,jdbcType=INTEGER}, #{uName,jdbcType=VARCHAR}, 
      #{uPassword,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{sex,jdbcType=CHAR}, #{phone,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="entity.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uId != null">
        U_ID,
      </if>
      <if test="tId != null">
        T_ID,
      </if>
      <if test="uName != null">
        U_NAME,
      </if>
      <if test="uPassword != null">
        U_PASSWORD,
      </if>
      <if test="age != null">
        AGE,
      </if>
      <if test="sex != null">
        SEX,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uId != null">
        #{uId,jdbcType=INTEGER},
      </if>
      <if test="tId != null">
        #{tId,jdbcType=INTEGER},
      </if>
      <if test="uName != null">
        #{uName,jdbcType=VARCHAR},
      </if>
      <if test="uPassword != null">
        #{uPassword,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="entity.Users">
    update users
    <set>
      <if test="tId != null">
        T_ID = #{tId,jdbcType=INTEGER},
      </if>
      <if test="uName != null">
        U_NAME = #{uName,jdbcType=VARCHAR},
      </if>
      <if test="uPassword != null">
        U_PASSWORD = #{uPassword,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        AGE = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        SEX = #{sex,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
    </set>
    where U_ID = #{uId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.Users">
    update users
    set T_ID = #{tId,jdbcType=INTEGER},
      U_NAME = #{uName,jdbcType=VARCHAR},
      U_PASSWORD = #{uPassword,jdbcType=VARCHAR},
      AGE = #{age,jdbcType=INTEGER},
      SEX = #{sex,jdbcType=CHAR},
      PHONE = #{phone,jdbcType=VARCHAR}
    where U_ID = #{uId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="entity.Users">
    <id column="U_ID" jdbcType="INTEGER" property="uId" />
    <result column="T_ID" jdbcType="INTEGER" property="tId" />
    <result column="U_NAME" jdbcType="VARCHAR" property="uName" />
    <result column="U_PASSWORD" jdbcType="VARCHAR" property="uPassword" />
    <result column="AGE" jdbcType="INTEGER" property="age" />
    <result column="SEX" jdbcType="CHAR" property="sex" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
  </resultMap>
  <sql id="Base_Column_List">
    U_ID, T_ID, U_NAME, U_PASSWORD, AGE, SEX, PHONE
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where U_ID = #{uId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where U_ID = #{uId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="entity.Users">
    insert into users (U_ID, T_ID, U_NAME, 
      U_PASSWORD, AGE, SEX, PHONE
      )
    values (#{uId,jdbcType=INTEGER}, #{tId,jdbcType=INTEGER}, #{uName,jdbcType=VARCHAR}, 
      #{uPassword,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{sex,jdbcType=CHAR}, #{phone,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="entity.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uId != null">
        U_ID,
      </if>
      <if test="tId != null">
        T_ID,
      </if>
      <if test="uName != null">
        U_NAME,
      </if>
      <if test="uPassword != null">
        U_PASSWORD,
      </if>
      <if test="age != null">
        AGE,
      </if>
      <if test="sex != null">
        SEX,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uId != null">
        #{uId,jdbcType=INTEGER},
      </if>
      <if test="tId != null">
        #{tId,jdbcType=INTEGER},
      </if>
      <if test="uName != null">
        #{uName,jdbcType=VARCHAR},
      </if>
      <if test="uPassword != null">
        #{uPassword,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="entity.Users">
    update users
    <set>
      <if test="tId != null">
        T_ID = #{tId,jdbcType=INTEGER},
      </if>
      <if test="uName != null">
        U_NAME = #{uName,jdbcType=VARCHAR},
      </if>
      <if test="uPassword != null">
        U_PASSWORD = #{uPassword,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        AGE = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        SEX = #{sex,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
    </set>
    where U_ID = #{uId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.Users">
    update users
    set T_ID = #{tId,jdbcType=INTEGER},
      U_NAME = #{uName,jdbcType=VARCHAR},
      U_PASSWORD = #{uPassword,jdbcType=VARCHAR},
      AGE = #{age,jdbcType=INTEGER},
      SEX = #{sex,jdbcType=CHAR},
      PHONE = #{phone,jdbcType=VARCHAR}
    where U_ID = #{uId,jdbcType=INTEGER}
  </update>
</mapper>